#############################################################################
# Makefile for building: qcadsrc
# Generated by qmake (3.1) (Qt 5.13.0)
# Project:  src.pro
# Template: subdirs
# Command: D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\bin\qmake.exe -o Makefile src.pro "CONFIG+=ractivated"
#############################################################################

MAKEFILE      = Makefile

EQ            = =

first: make_first
QMAKE         = D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
QINSTALL      = D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\bin\qmake.exe -install qinstall
QINSTALL_PROGRAM = D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\bin\qmake.exe -install qinstall -exe
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		sub-3rdparty \
		sub-core \
		sub-entity \
		sub-grid \
		sub-scripts \
		sub-snap \
		sub-operations \
		sub-stemmer \
		sub-spatialindex \
		sub-gui \
		sub-io \
		sub-customwidgets \
		sub-scripting \
		sub-run


sub-3rdparty-qmake_all:  FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	cd 3rdparty\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && $(MAKE) -f Makefile qmake_all
sub-3rdparty: $(MAKEFILE) FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-3rdparty-make_first-ordered: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-3rdparty-make_first: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-3rdparty-all-ordered: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-3rdparty-all: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-3rdparty-clean-ordered: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-3rdparty-clean: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-3rdparty-distclean-ordered: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-3rdparty-distclean: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-3rdparty-install_subtargets-ordered: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-3rdparty-install_subtargets: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-3rdparty-uninstall_subtargets-ordered: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-3rdparty-uninstall_subtargets: FORCE
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-core-qmake_all: sub-3rdparty-qmake_all FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	cd core\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && $(MAKE) -f Makefile qmake_all
sub-core: $(MAKEFILE) FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-core-make_first-ordered: sub-3rdparty-make_first-ordered  FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-core-make_first: FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-core-all-ordered: sub-3rdparty-all-ordered  FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-core-all: FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-core-clean-ordered: sub-3rdparty-clean-ordered  FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-core-clean: FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-core-distclean-ordered: sub-3rdparty-distclean-ordered  FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-core-distclean: FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-core-install_subtargets-ordered: sub-3rdparty-install_subtargets-ordered  FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-core-install_subtargets: FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-core-uninstall_subtargets-ordered: sub-3rdparty-uninstall_subtargets-ordered  FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-core-uninstall_subtargets: FORCE
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-entity-qmake_all: sub-core-qmake_all FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	cd entity\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && $(MAKE) -f Makefile qmake_all
sub-entity: $(MAKEFILE) FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-entity-make_first-ordered: sub-core-make_first-ordered  FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-entity-make_first: FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-entity-all-ordered: sub-core-all-ordered  FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-entity-all: FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-entity-clean-ordered: sub-core-clean-ordered  FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-entity-clean: FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-entity-distclean-ordered: sub-core-distclean-ordered  FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-entity-distclean: FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-entity-install_subtargets-ordered: sub-core-install_subtargets-ordered  FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-entity-install_subtargets: FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-entity-uninstall_subtargets-ordered: sub-core-uninstall_subtargets-ordered  FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-entity-uninstall_subtargets: FORCE
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-grid-qmake_all: sub-entity-qmake_all FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	cd grid\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && $(MAKE) -f Makefile qmake_all
sub-grid: $(MAKEFILE) FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-grid-make_first-ordered: sub-entity-make_first-ordered  FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-grid-make_first: FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-grid-all-ordered: sub-entity-all-ordered  FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-grid-all: FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-grid-clean-ordered: sub-entity-clean-ordered  FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-grid-clean: FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-grid-distclean-ordered: sub-entity-distclean-ordered  FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-grid-distclean: FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-grid-install_subtargets-ordered: sub-entity-install_subtargets-ordered  FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-grid-install_subtargets: FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-grid-uninstall_subtargets-ordered: sub-entity-uninstall_subtargets-ordered  FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-grid-uninstall_subtargets: FORCE
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-scripts-qmake_all: sub-grid-qmake_all FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	cd scripts\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && $(MAKE) -f Makefile qmake_all
sub-scripts: $(MAKEFILE) FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-scripts-make_first-ordered: sub-grid-make_first-ordered  FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-scripts-make_first: FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-scripts-all-ordered: sub-grid-all-ordered  FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-scripts-all: FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-scripts-clean-ordered: sub-grid-clean-ordered  FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-scripts-clean: FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-scripts-distclean-ordered: sub-grid-distclean-ordered  FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-scripts-distclean: FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-scripts-install_subtargets-ordered: sub-grid-install_subtargets-ordered  FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-scripts-install_subtargets: FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-scripts-uninstall_subtargets-ordered: sub-grid-uninstall_subtargets-ordered  FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-scripts-uninstall_subtargets: FORCE
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-snap-qmake_all: sub-scripts-qmake_all FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	cd snap\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && $(MAKE) -f Makefile qmake_all
sub-snap: $(MAKEFILE) FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-snap-make_first-ordered: sub-scripts-make_first-ordered  FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-snap-make_first: FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-snap-all-ordered: sub-scripts-all-ordered  FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-snap-all: FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-snap-clean-ordered: sub-scripts-clean-ordered  FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-snap-clean: FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-snap-distclean-ordered: sub-scripts-distclean-ordered  FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-snap-distclean: FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-snap-install_subtargets-ordered: sub-scripts-install_subtargets-ordered  FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-snap-install_subtargets: FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-snap-uninstall_subtargets-ordered: sub-scripts-uninstall_subtargets-ordered  FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-snap-uninstall_subtargets: FORCE
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-operations-qmake_all: sub-snap-qmake_all FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	cd operations\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && $(MAKE) -f Makefile qmake_all
sub-operations: $(MAKEFILE) FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-operations-make_first-ordered: sub-snap-make_first-ordered  FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-operations-make_first: FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-operations-all-ordered: sub-snap-all-ordered  FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-operations-all: FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-operations-clean-ordered: sub-snap-clean-ordered  FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-operations-clean: FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-operations-distclean-ordered: sub-snap-distclean-ordered  FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-operations-distclean: FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-operations-install_subtargets-ordered: sub-snap-install_subtargets-ordered  FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-operations-install_subtargets: FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-operations-uninstall_subtargets-ordered: sub-snap-uninstall_subtargets-ordered  FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-operations-uninstall_subtargets: FORCE
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-stemmer-qmake_all: sub-operations-qmake_all FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	cd stemmer\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && $(MAKE) -f Makefile qmake_all
sub-stemmer: $(MAKEFILE) FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-stemmer-make_first-ordered: sub-operations-make_first-ordered  FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-stemmer-make_first: FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-stemmer-all-ordered: sub-operations-all-ordered  FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-stemmer-all: FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-stemmer-clean-ordered: sub-operations-clean-ordered  FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-stemmer-clean: FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-stemmer-distclean-ordered: sub-operations-distclean-ordered  FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-stemmer-distclean: FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-stemmer-install_subtargets-ordered: sub-operations-install_subtargets-ordered  FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-stemmer-install_subtargets: FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-stemmer-uninstall_subtargets-ordered: sub-operations-uninstall_subtargets-ordered  FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-stemmer-uninstall_subtargets: FORCE
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-spatialindex-qmake_all: sub-stemmer-qmake_all FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	cd spatialindex\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && $(MAKE) -f Makefile qmake_all
sub-spatialindex: $(MAKEFILE) FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-spatialindex-make_first-ordered: sub-stemmer-make_first-ordered  FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-spatialindex-make_first: FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-spatialindex-all-ordered: sub-stemmer-all-ordered  FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-spatialindex-all: FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-spatialindex-clean-ordered: sub-stemmer-clean-ordered  FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-spatialindex-clean: FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-spatialindex-distclean-ordered: sub-stemmer-distclean-ordered  FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-spatialindex-distclean: FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-spatialindex-install_subtargets-ordered: sub-stemmer-install_subtargets-ordered  FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-spatialindex-install_subtargets: FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-spatialindex-uninstall_subtargets-ordered: sub-stemmer-uninstall_subtargets-ordered  FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-spatialindex-uninstall_subtargets: FORCE
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-gui-qmake_all: sub-spatialindex-qmake_all FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	cd gui\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && $(MAKE) -f Makefile qmake_all
sub-gui: $(MAKEFILE) FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-gui-make_first-ordered: sub-spatialindex-make_first-ordered  FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-gui-make_first: FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-gui-all-ordered: sub-spatialindex-all-ordered  FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-gui-all: FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-gui-clean-ordered: sub-spatialindex-clean-ordered  FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-gui-clean: FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-gui-distclean-ordered: sub-spatialindex-distclean-ordered  FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-gui-distclean: FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-gui-install_subtargets-ordered: sub-spatialindex-install_subtargets-ordered  FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-gui-install_subtargets: FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-gui-uninstall_subtargets-ordered: sub-spatialindex-uninstall_subtargets-ordered  FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-gui-uninstall_subtargets: FORCE
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-io-qmake_all: sub-gui-qmake_all FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	cd io\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && $(MAKE) -f Makefile qmake_all
sub-io: $(MAKEFILE) FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-io-make_first-ordered: sub-gui-make_first-ordered  FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-io-make_first: FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-io-all-ordered: sub-gui-all-ordered  FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-io-all: FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-io-clean-ordered: sub-gui-clean-ordered  FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-io-clean: FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-io-distclean-ordered: sub-gui-distclean-ordered  FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-io-distclean: FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-io-install_subtargets-ordered: sub-gui-install_subtargets-ordered  FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-io-install_subtargets: FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-io-uninstall_subtargets-ordered: sub-gui-uninstall_subtargets-ordered  FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-io-uninstall_subtargets: FORCE
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-customwidgets-qmake_all: sub-io-qmake_all FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	cd customwidgets\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && $(MAKE) -f Makefile qmake_all
sub-customwidgets: $(MAKEFILE) FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-customwidgets-make_first-ordered: sub-io-make_first-ordered  FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-customwidgets-make_first: FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-customwidgets-all-ordered: sub-io-all-ordered  FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-customwidgets-all: FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-customwidgets-clean-ordered: sub-io-clean-ordered  FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-customwidgets-clean: FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-customwidgets-distclean-ordered: sub-io-distclean-ordered  FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-customwidgets-distclean: FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-customwidgets-install_subtargets-ordered: sub-io-install_subtargets-ordered  FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-customwidgets-install_subtargets: FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-customwidgets-uninstall_subtargets-ordered: sub-io-uninstall_subtargets-ordered  FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-customwidgets-uninstall_subtargets: FORCE
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-scripting-qmake_all: sub-customwidgets-qmake_all FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	cd scripting\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && $(MAKE) -f Makefile qmake_all
sub-scripting: $(MAKEFILE) FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-scripting-make_first-ordered: sub-customwidgets-make_first-ordered  FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-scripting-make_first: FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-scripting-all-ordered: sub-customwidgets-all-ordered  FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-scripting-all: FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-scripting-clean-ordered: sub-customwidgets-clean-ordered  FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-scripting-clean: FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-scripting-distclean-ordered: sub-customwidgets-distclean-ordered  FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-scripting-distclean: FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-scripting-install_subtargets-ordered: sub-customwidgets-install_subtargets-ordered  FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-scripting-install_subtargets: FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-scripting-uninstall_subtargets-ordered: sub-customwidgets-uninstall_subtargets-ordered  FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-scripting-uninstall_subtargets: FORCE
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-run-qmake_all: sub-scripting-qmake_all FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	cd run\ && $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated"
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && $(MAKE) -f Makefile qmake_all
sub-run: $(MAKEFILE) FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile
sub-run-make_first-ordered: sub-scripting-make_first-ordered  FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-run-make_first: FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile 
sub-run-all-ordered: sub-scripting-all-ordered  FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-run-all: FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile all
sub-run-clean-ordered: sub-scripting-clean-ordered  FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-run-clean: FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile clean
sub-run-distclean-ordered: sub-scripting-distclean-ordered  FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-run-distclean: FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile distclean
sub-run-install_subtargets-ordered: sub-scripting-install_subtargets-ordered  FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-run-install_subtargets: FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile install
sub-run-uninstall_subtargets-ordered: sub-scripting-uninstall_subtargets-ordered  FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall
sub-run-uninstall_subtargets: FORCE
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile uninstall

Makefile: src.pro ..\.qmake.cache D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\win32-msvc\qmake.conf D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\spec_pre.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\angle.conf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\windows-desktop.conf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\win32\windows_vulkan_sdk.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\windows-vulkan.conf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\msvc-desktop.conf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\qconfig.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3danimation.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3danimation_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dcore.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dcore_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dextras.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dextras_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dinput.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dinput_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dlogic.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dlogic_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquick.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquick_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickanimation.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickanimation_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickextras.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickextras_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickinput.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickinput_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickrender.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickrender_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickscene2d.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickscene2d_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3drender.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3drender_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_accessibility_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axbase.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axbase_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axcontainer.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axcontainer_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axserver.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axserver_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_bluetooth.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_bluetooth_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_bootstrap_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_concurrent.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_concurrent_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_core.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_core_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_dbus.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_dbus_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_designer.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_designer_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_designercomponents_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_devicediscovery_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_edid_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_egl_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_eventdispatcher_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_fb_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_fontdatabase_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gamepad.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gamepad_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gui.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gui_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_help.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_help_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_location.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_location_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimedia.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimedia_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimediawidgets.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimediawidgets_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_network.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_network_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_nfc.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_nfc_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_opengl.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_opengl_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_openglextensions.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_openglextensions_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_packetprotocol_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_platformcompositor_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioning.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioning_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioningquick.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioningquick_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_printsupport.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_printsupport_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qml.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qml_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmldebug_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmldevtools_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmltest.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmltest_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qtmultimediaquicktools_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quick.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quick_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickcontrols2.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickcontrols2_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickparticles_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickshapes_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quicktemplates2.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quicktemplates2_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickwidgets.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickwidgets_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_remoteobjects.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_remoteobjects_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_repparser.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_repparser_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_script.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_script_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scripttools.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scripttools_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scxml.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scxml_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sensors.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sensors_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialbus.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialbus_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialport.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialport_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sql.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sql_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_svg.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_svg_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_testlib.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_testlib_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_texttospeech.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_texttospeech_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_theme_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_uiplugin.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_uitools.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_uitools_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_vulkan_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webchannel.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webchannel_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webengine.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webengine_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginecore.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginecore_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginecoreheaders_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginewidgets.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginewidgets_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_websockets.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_websockets_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webview.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webview_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_widgets.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_widgets_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_windowsuiautomation_support_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_winextras.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_winextras_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xml.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xml_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xmlpatterns.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xmlpatterns_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_zlib_private.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\qt_functions.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\qt_config.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\win32-msvc\qmake.conf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\spec_post.prf \
		..\.qmake.cache \
		..\.qmake.stash \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\exclusive_builds.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\msvc-version.conf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\toolchain.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\default_pre.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\win32\default_pre.prf \
		..\shared.pri \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\resolve_config.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\exclusive_builds_post.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\default_post.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\warn_on.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\precompile_header.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\qmake_use.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\file_copies.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\win32\windows.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\testcase_targets.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\exceptions.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\yacc.prf \
		D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\lex.prf \
		src.pro
	$(QMAKE) -o Makefile src.pro "CONFIG+=ractivated"
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\spec_pre.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\angle.conf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\windows-desktop.conf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\win32\windows_vulkan_sdk.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\windows-vulkan.conf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\msvc-desktop.conf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\qconfig.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3danimation.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3danimation_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dcore.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dcore_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dextras.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dextras_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dinput.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dinput_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dlogic.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dlogic_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquick.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquick_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickanimation.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickanimation_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickextras.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickextras_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickinput.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickinput_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickrender.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickrender_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickscene2d.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3dquickscene2d_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3drender.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_3drender_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_accessibility_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axbase.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axbase_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axcontainer.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axcontainer_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axserver.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_axserver_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_bluetooth.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_bluetooth_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_bootstrap_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_concurrent.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_concurrent_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_core.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_core_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_dbus.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_dbus_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_designer.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_designer_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_designercomponents_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_devicediscovery_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_edid_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_egl_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_eventdispatcher_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_fb_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_fontdatabase_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gamepad.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gamepad_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gui.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_gui_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_help.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_help_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_location.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_location_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimedia.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimedia_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimediawidgets.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_multimediawidgets_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_network.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_network_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_nfc.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_nfc_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_opengl.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_opengl_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_openglextensions.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_openglextensions_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_packetprotocol_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_platformcompositor_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioning.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioning_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioningquick.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_positioningquick_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_printsupport.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_printsupport_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qml.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qml_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmldebug_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmldevtools_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmltest.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qmltest_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_qtmultimediaquicktools_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quick.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quick_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickcontrols2.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickcontrols2_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickparticles_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickshapes_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quicktemplates2.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quicktemplates2_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickwidgets.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_quickwidgets_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_remoteobjects.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_remoteobjects_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_repparser.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_repparser_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_script.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_script_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scripttools.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scripttools_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scxml.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_scxml_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sensors.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sensors_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialbus.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialbus_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialport.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_serialport_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sql.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_sql_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_svg.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_svg_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_testlib.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_testlib_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_texttospeech.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_texttospeech_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_theme_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_uiplugin.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_uitools.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_uitools_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_vulkan_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webchannel.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webchannel_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webengine.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webengine_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginecore.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginecore_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginecoreheaders_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginewidgets.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webenginewidgets_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_websockets.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_websockets_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webview.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_webview_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_widgets.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_widgets_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_windowsuiautomation_support_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_winextras.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_winextras_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xml.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xml_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xmlpatterns.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_xmlpatterns_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\modules\qt_lib_zlib_private.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\qt_functions.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\qt_config.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\win32-msvc\qmake.conf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\spec_post.prf:
..\.qmake.cache:
..\.qmake.stash:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\exclusive_builds.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\common\msvc-version.conf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\toolchain.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\default_pre.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\win32\default_pre.prf:
..\shared.pri:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\resolve_config.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\exclusive_builds_post.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\default_post.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\warn_on.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\precompile_header.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\qmake_use.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\file_copies.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\win32\windows.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\testcase_targets.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\exceptions.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\yacc.prf:
D:\Qt\Qt5.13.0-2\5.13.0\msvc2017_64\mkspecs\features\lex.prf:
src.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile src.pro "CONFIG+=ractivated"

qmake_all: sub-3rdparty-qmake_all sub-core-qmake_all sub-entity-qmake_all sub-grid-qmake_all sub-scripts-qmake_all sub-snap-qmake_all sub-operations-qmake_all sub-stemmer-qmake_all sub-spatialindex-qmake_all sub-gui-qmake_all sub-io-qmake_all sub-customwidgets-qmake_all sub-scripting-qmake_all sub-run-qmake_all FORCE

make_first: sub-3rdparty-make_first-ordered sub-core-make_first-ordered sub-entity-make_first-ordered sub-grid-make_first-ordered sub-scripts-make_first-ordered sub-snap-make_first-ordered sub-operations-make_first-ordered sub-stemmer-make_first-ordered sub-spatialindex-make_first-ordered sub-gui-make_first-ordered sub-io-make_first-ordered sub-customwidgets-make_first-ordered sub-scripting-make_first-ordered sub-run-make_first-ordered  FORCE
all: sub-3rdparty-all-ordered sub-core-all-ordered sub-entity-all-ordered sub-grid-all-ordered sub-scripts-all-ordered sub-snap-all-ordered sub-operations-all-ordered sub-stemmer-all-ordered sub-spatialindex-all-ordered sub-gui-all-ordered sub-io-all-ordered sub-customwidgets-all-ordered sub-scripting-all-ordered sub-run-all-ordered  FORCE
clean: sub-3rdparty-clean-ordered sub-core-clean-ordered sub-entity-clean-ordered sub-grid-clean-ordered sub-scripts-clean-ordered sub-snap-clean-ordered sub-operations-clean-ordered sub-stemmer-clean-ordered sub-spatialindex-clean-ordered sub-gui-clean-ordered sub-io-clean-ordered sub-customwidgets-clean-ordered sub-scripting-clean-ordered sub-run-clean-ordered  FORCE
distclean: sub-3rdparty-distclean-ordered sub-core-distclean-ordered sub-entity-distclean-ordered sub-grid-distclean-ordered sub-scripts-distclean-ordered sub-snap-distclean-ordered sub-operations-distclean-ordered sub-stemmer-distclean-ordered sub-spatialindex-distclean-ordered sub-gui-distclean-ordered sub-io-distclean-ordered sub-customwidgets-distclean-ordered sub-scripting-distclean-ordered sub-run-distclean-ordered  FORCE
	-$(DEL_FILE) Makefile
install_subtargets: sub-3rdparty-install_subtargets-ordered sub-core-install_subtargets-ordered sub-entity-install_subtargets-ordered sub-grid-install_subtargets-ordered sub-scripts-install_subtargets-ordered sub-snap-install_subtargets-ordered sub-operations-install_subtargets-ordered sub-stemmer-install_subtargets-ordered sub-spatialindex-install_subtargets-ordered sub-gui-install_subtargets-ordered sub-io-install_subtargets-ordered sub-customwidgets-install_subtargets-ordered sub-scripting-install_subtargets-ordered sub-run-install_subtargets-ordered FORCE
uninstall_subtargets: sub-3rdparty-uninstall_subtargets-ordered sub-core-uninstall_subtargets-ordered sub-entity-uninstall_subtargets-ordered sub-grid-uninstall_subtargets-ordered sub-scripts-uninstall_subtargets-ordered sub-snap-uninstall_subtargets-ordered sub-operations-uninstall_subtargets-ordered sub-stemmer-uninstall_subtargets-ordered sub-spatialindex-uninstall_subtargets-ordered sub-gui-uninstall_subtargets-ordered sub-io-uninstall_subtargets-ordered sub-customwidgets-uninstall_subtargets-ordered sub-scripting-uninstall_subtargets-ordered sub-run-uninstall_subtargets-ordered FORCE

sub-3rdparty-debug_ordered:
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-core-debug_ordered: sub-3rdparty-debug_ordered 
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-entity-debug_ordered: sub-core-debug_ordered 
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-grid-debug_ordered: sub-entity-debug_ordered 
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-scripts-debug_ordered: sub-grid-debug_ordered 
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-snap-debug_ordered: sub-scripts-debug_ordered 
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-operations-debug_ordered: sub-snap-debug_ordered 
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-stemmer-debug_ordered: sub-operations-debug_ordered 
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-spatialindex-debug_ordered: sub-stemmer-debug_ordered 
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-gui-debug_ordered: sub-spatialindex-debug_ordered 
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-io-debug_ordered: sub-gui-debug_ordered 
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-customwidgets-debug_ordered: sub-io-debug_ordered 
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-scripting-debug_ordered: sub-customwidgets-debug_ordered 
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
sub-run-debug_ordered: sub-scripting-debug_ordered 
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile debug
debug: sub-3rdparty-debug_ordered sub-core-debug_ordered sub-entity-debug_ordered sub-grid-debug_ordered sub-scripts-debug_ordered sub-snap-debug_ordered sub-operations-debug_ordered sub-stemmer-debug_ordered sub-spatialindex-debug_ordered sub-gui-debug_ordered sub-io-debug_ordered sub-customwidgets-debug_ordered sub-scripting-debug_ordered sub-run-debug_ordered

sub-3rdparty-release_ordered:
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-core-release_ordered: sub-3rdparty-release_ordered 
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-entity-release_ordered: sub-core-release_ordered 
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-grid-release_ordered: sub-entity-release_ordered 
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-scripts-release_ordered: sub-grid-release_ordered 
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-snap-release_ordered: sub-scripts-release_ordered 
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-operations-release_ordered: sub-snap-release_ordered 
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-stemmer-release_ordered: sub-operations-release_ordered 
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-spatialindex-release_ordered: sub-stemmer-release_ordered 
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-gui-release_ordered: sub-spatialindex-release_ordered 
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-io-release_ordered: sub-gui-release_ordered 
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-customwidgets-release_ordered: sub-io-release_ordered 
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-scripting-release_ordered: sub-customwidgets-release_ordered 
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
sub-run-release_ordered: sub-scripting-release_ordered 
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile release
release: sub-3rdparty-release_ordered sub-core-release_ordered sub-entity-release_ordered sub-grid-release_ordered sub-scripts-release_ordered sub-snap-release_ordered sub-operations-release_ordered sub-stemmer-release_ordered sub-spatialindex-release_ordered sub-gui-release_ordered sub-io-release_ordered sub-customwidgets-release_ordered sub-scripting-release_ordered sub-run-release_ordered

sub-3rdparty-check_ordered:
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-core-check_ordered: sub-3rdparty-check_ordered 
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-entity-check_ordered: sub-core-check_ordered 
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-grid-check_ordered: sub-entity-check_ordered 
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-scripts-check_ordered: sub-grid-check_ordered 
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-snap-check_ordered: sub-scripts-check_ordered 
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-operations-check_ordered: sub-snap-check_ordered 
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-stemmer-check_ordered: sub-operations-check_ordered 
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-spatialindex-check_ordered: sub-stemmer-check_ordered 
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-gui-check_ordered: sub-spatialindex-check_ordered 
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-io-check_ordered: sub-gui-check_ordered 
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-customwidgets-check_ordered: sub-io-check_ordered 
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-scripting-check_ordered: sub-customwidgets-check_ordered 
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
sub-run-check_ordered: sub-scripting-check_ordered 
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile check
check: sub-3rdparty-check_ordered sub-core-check_ordered sub-entity-check_ordered sub-grid-check_ordered sub-scripts-check_ordered sub-snap-check_ordered sub-operations-check_ordered sub-stemmer-check_ordered sub-spatialindex-check_ordered sub-gui-check_ordered sub-io-check_ordered sub-customwidgets-check_ordered sub-scripting-check_ordered sub-run-check_ordered

sub-3rdparty-benchmark_ordered:
	@if not exist 3rdparty\ mkdir 3rdparty\ & if not exist 3rdparty\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd 3rdparty\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\3rdparty\3rdparty.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-core-benchmark_ordered: sub-3rdparty-benchmark_ordered 
	@if not exist core\ mkdir core\ & if not exist core\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd core\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\core\core.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-entity-benchmark_ordered: sub-core-benchmark_ordered 
	@if not exist entity\ mkdir entity\ & if not exist entity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd entity\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\entity\entity.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-grid-benchmark_ordered: sub-entity-benchmark_ordered 
	@if not exist grid\ mkdir grid\ & if not exist grid\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd grid\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\grid\grid.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-scripts-benchmark_ordered: sub-grid-benchmark_ordered 
	@if not exist scripts\ mkdir scripts\ & if not exist scripts\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripts\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripts\scripts.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-snap-benchmark_ordered: sub-scripts-benchmark_ordered 
	@if not exist snap\ mkdir snap\ & if not exist snap\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd snap\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\snap\snap.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-operations-benchmark_ordered: sub-snap-benchmark_ordered 
	@if not exist operations\ mkdir operations\ & if not exist operations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd operations\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\operations\operations.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-stemmer-benchmark_ordered: sub-operations-benchmark_ordered 
	@if not exist stemmer\ mkdir stemmer\ & if not exist stemmer\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd stemmer\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\stemmer\stemmer.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-spatialindex-benchmark_ordered: sub-stemmer-benchmark_ordered 
	@if not exist spatialindex\ mkdir spatialindex\ & if not exist spatialindex\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd spatialindex\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\spatialindex\spatialindex.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-gui-benchmark_ordered: sub-spatialindex-benchmark_ordered 
	@if not exist gui\ mkdir gui\ & if not exist gui\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd gui\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\gui\gui.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-io-benchmark_ordered: sub-gui-benchmark_ordered 
	@if not exist io\ mkdir io\ & if not exist io\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd io\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\io\io.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-customwidgets-benchmark_ordered: sub-io-benchmark_ordered 
	@if not exist customwidgets\ mkdir customwidgets\ & if not exist customwidgets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd customwidgets\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\customwidgets\customwidgets.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-scripting-benchmark_ordered: sub-customwidgets-benchmark_ordered 
	@if not exist scripting\ mkdir scripting\ & if not exist scripting\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd scripting\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\scripting\scripting.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
sub-run-benchmark_ordered: sub-scripting-benchmark_ordered 
	@if not exist run\ mkdir run\ & if not exist run\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd run\ && ( if not exist Makefile $(QMAKE) -o Makefile D:\mywork\lib2\qcad\src\run\run.pro "CONFIG+=ractivated" ) && $(MAKE) -f Makefile benchmark
benchmark: sub-3rdparty-benchmark_ordered sub-core-benchmark_ordered sub-entity-benchmark_ordered sub-grid-benchmark_ordered sub-scripts-benchmark_ordered sub-snap-benchmark_ordered sub-operations-benchmark_ordered sub-stemmer-benchmark_ordered sub-spatialindex-benchmark_ordered sub-gui-benchmark_ordered sub-io-benchmark_ordered sub-customwidgets-benchmark_ordered sub-scripting-benchmark_ordered sub-run-benchmark_ordered
install:install_subtargets  FORCE

uninstall: uninstall_subtargets FORCE

FORCE:

